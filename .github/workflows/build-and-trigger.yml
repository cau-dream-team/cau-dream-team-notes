name: Build and Trigger

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  DOCKER_VERSION: '243.22562'

jobs:
  build:
    strategy:
      matrix:
        instance: [cp, cv, ah, kl, kp]
    runs-on: ubuntu-latest
    outputs:
      algolia_artifact: ${{ steps.define-ids.outputs.algolia_artifact }}
      artifact: ${{ steps.define-ids.outputs.artifact }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Define instance id and artifacts
        id: define-ids
        run: |
          INSTANCE="Writerside/${{ matrix.instance }}"
          INSTANCE_ID_UPPER=$(echo "${{ matrix.instance }}" | tr '[:lower:]' '[:upper:]')
          ARTIFACT="webHelp${INSTANCE_ID_UPPER}2-all.zip"
          ALGOLIA_ARTIFACT="algolia-indexes-${INSTANCE_ID_UPPER}.zip"

          echo "INSTANCE=$INSTANCE" >> $GITHUB_ENV
          echo "INSTANCE_ID_UPPER=$INSTANCE_ID_UPPER" >> $GITHUB_ENV
          echo "ARTIFACT=$ARTIFACT" >> $GITHUB_ENV
          echo "ALGOLIA_ARTIFACT=$ALGOLIA_ARTIFACT" >> $GITHUB_ENV
          echo "artifact=$ARTIFACT" >> $GITHUB_OUTPUT
          echo "algolia_artifact=$ALGOLIA_ARTIFACT" >> $GITHUB_OUTPUT

      - name: Build docs using Writerside Docker builder
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: Save artifact with build results
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.instance }}
          path: |
            artifacts/${{ steps.define-ids.outputs.artifact }}
            artifacts/report.json
            artifacts/${{ steps.define-ids.outputs.algolia_artifact }}
          retention-days: 7

  create_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate Release Version
        run: |
          TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
          echo "RELEASE_VERSION=$TIMESTAMP" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}-${{ env.RELEASE_VERSION }}
          release_name: Release ${{ github.ref_name }}-${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        run: |
          for instance in cp cv ah kl kp; do
            echo "➡️ Uploading assets for instance: $instance"
            asset_path="./artifacts/$instance/webHelp$(echo $instance | tr '[:lower:]' '[:upper:]')2-all.zip"
            asset_name="webHelp$(echo $instance | tr '[:lower:]' '[:upper:]')2-all.zip"
            curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                 -H "Content-Type: application/zip" \
                 --data-binary @"$asset_path" \
                 "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$asset_name"
          done

  trigger:
    needs: [build, create_release]
    runs-on: ubuntu-latest
    steps:
      - name: Trigger target repository
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: cau-dream-team/cau-dream-team-website
          event-type: update_notes
          client-payload: '{"artifact_names": ["cp", "cv", "ah", "kl", "kp"]}'
